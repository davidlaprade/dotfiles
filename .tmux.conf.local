# re-source tmux
bind-key r source-file ~/.tmux.conf \; display-message "Boom! tmux.conf reloaded"

# use emacs on the tmux command line
set -g status-keys "emacs"

# format right side of green status bar
# set -g status-right " #(battery -t)  #(date '+%a, %b %d - %I:%M') "
set -g status-right-length 50
set -g status-right " #(battery -at)  #(date '+%a, %b %d - %I:%M %p') "

# vim-like opening of panes
bind-key s split-window -v -c '#{pane_current_path}'
bind-key v split-window -h -c '#{pane_current_path}'

# resize panes
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1

# create new windows with the current path
bind-key c new-window -c '#{pane_current_path}'

# break pane out into its own window
bind-key b break-pane

# open choose-tree mode
bind-key C-j choose-tree

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Copy from tmux into OSX clipboard
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# Enter copy mode with <prefix> CNTL+k
unbind [
bind-key C-k copy-mode

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
